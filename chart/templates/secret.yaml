{{- $altNames := list ( printf "dex.%s"  .Release.Namespace ) ( printf "dex.%s.svc" .Release.Namespace ) -}}
{{- $ca := genCA "webhook-ca" 3650 -}}
{{- $cert := genSignedCert ( printf "dex.%s.svc.cluster.local"  .Release.Namespace ) nil $altNames 3650 $ca -}}
apiVersion: v1
kind: Secret
metadata:
  name: authservice-config
stringData:
  config.json: |
    {
      "listen_address": "0.0.0.0",
      "listen_port": "10003",
      "log_level": "{{ .Values.config.logLevel }}",
      "threads": 8,
      "default_oidc_config": {
        "skip_verify_peer_cert": {{ $.Values.config.skipVerifyPeerCert }},
        "authorization_uri": "https://{{ .Values.dex.publicURL }}/dex/auth/github",
        "token_uri": "https://dex.{{ .Release.Namespace }}.svc.cluster.local:5554/dex/token",
        "jwks_fetcher": {
          "jwks_uri": "https://dex.{{ .Release.Namespace }}.svc.cluster.local:5554/dex/token",
          "periodic_fetch_interval_sec": {{ $.Values.config.periodicFetchIntervalSec }},
          "skip_verify_peer_cert": "{{ $.Values.config.skipVerifyPeerCert }}"
        },
        "id_token": {
          "preamble": "Bearer",
          "header": "Authorization"
        },
        "trusted_certificate_authority": "{{ $ca.Cert | replace "\n" "\\n" }}",
        "scopes": []
      },
      "chains": [
      {{- range $i, $client := $.Values.dex.config.staticClients }}{{- if $client.authSvcEnabled }}{{ if ne $i 0 }},{{ end }}
        {
          "name": "{{ $client.id }}",
          "match": {
            "header": ":authority",
            "prefix": "{{ $client.hostname }}"
          },
          "filters": [
            {
              "oidc_override": {
                "callback_uri": "https://{{ $client.hostname }}/oauth/callback",
                "client_id": "{{ $client.id }}",
                "client_secret": "{{ $client.secret }}",
                "cookie_name_prefix": "{{ $client.id }}-auth-cookie",
                "logout": {
                  "path": "{{ $client.logoutPath | default "/logout" }}",
                  "redirect_uri": "{{ $client.logoutRedirectUri | default (printf "%s/logout" $client.hostname) }}"
                }
              }
            }
          ]
        }
      {{- end }}{{- end }}
      ]
    }
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: dex-cert
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  tls.crt: {{ b64enc $cert.Cert }}
  tls.key: {{ b64enc $cert.Key }}